{"version":3,"sources":["App.module.css","hw3/Monday.module.css","hw3/Monday/Names.module.css","hw3/Monday/Button.module.css","hw3/Monday/Span.module.css","hw3/Burger.jsx","hw3/Navbar.jsx","hw3/Monday/Names.jsx","hw3/Monday/Button.jsx","hw3/Monday/Span.jsx","hw3/Monday/Input.jsx","hw3/Monday.jsx","hw3/Tuesday/TodoHeader.js","hw3/Tuesday/TodoTask.js","hw3/Tuesday/TodoTasks.js","hw3/Tuesday/TodoFooter.js","store.js","hw3/Tuesday/Tuesday.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Burger","props","onClick","this","className","React","Component","Navbar","state","filterValue","changeFilter","newFilterValue","setState","onFilterActive","render","classForNav","activeClassName","to","Names","drawName","names","map","name","classes","main","Button","disable","inputValue","button","plus","disabled","Span","span","count","Input","error","changeValue","e","changeInputValue","currentTarget","value","onKeyPress","key","onChange","Monday","TodoHeader","onAddTaskClick","newTitle","trim","addTask","titleChange","type","placeholder","TodoTask","isEditMode","taskPriority","priority","activatedEditMode","deActivatedEditMode","onIsDoneChanged","changeStatus","task","id","checked","onTitleChanged","changeTitle","onDeleteTask","changeTaskPriority","newPriority","classDone","isDone","title","autoFocus","onBlur","TodoTasks","tasksElement","tasks","TodoFooter","isHidden","onAllFilterClick","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","onHideFiltersClick","classForAll","classForCompleted","classForActive","restoreState","defaultState","stateAsString","localStorage","getItem","JSON","parse","Tuesday","nextTaskId","saveState","stringify","setItem","forEach","t","newTask","taskId","changeTask","newPropValue","newTasks","filteredArray","filter","filtredTasks","App","def","loading","alert","setTimeout","path","tuesday","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.39b87c55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__1Gx_E\",\"tuesday\":\"App_tuesday__axDf3\",\"loading\":\"App_loading__3DtHo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Monday_main__2H_tX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Names_main__wQXPF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__358Qc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"Span_span__244Yl\"};","import React from 'react';\nimport  './Navbar.css';\n\n\nclass Burger extends React.Component {\n\n    render (props) {\n        return (\n            <div onClick={this.props.onClick} className='burger'> </div>\n        )\n    }\n}\nexport default Burger;\n\n//домашка от меня №3: создать компоненту, у которой:\n// - есть спан с числом, инпут и кнопка\n// - при нажатии на кнопку число в спане увеличивается на 1\n// - при нажатии на кнопку вызывается алерт с приветствием имени, введённым в инпуте\n// - при нажатии на кнопку инпут должен очиститься\n// (!!! обязательно проверить работу самому !!!)","import React from 'react';\nimport \"./Navbar.css\";\nimport {NavLink} from \"react-router-dom\";\nimport Burger from \"./Burger\";\n\n\nclass Navbar extends React.Component {\n    state = {\n        filterValue: 'nav'\n    }\n\n    changeFilter = (newFilterValue) => {\n        this.setState({filterValue: newFilterValue})\n    }\n    onFilterActive = () => {\n        if (this.state.filterValue === 'navActive') {\n            this.changeFilter('nav')\n        } else {\n            this.changeFilter('navActive')\n        }\n\n    }\n\n    render = (props) => {\n\n        let classForNav = this.state.filterValue === 'nav' ? 'nav' : 'navActive';\n\n        return (\n            <div className={classForNav}>\n                <div className='main'>\n                    <Burger onClick={this.onFilterActive}/>\n                    <div className='item'>\n                        <NavLink activeClassName='active' to='/monday'>Monday</NavLink>\n                    </div>\n                    <div className='item'>\n                        <NavLink activeClassName='active' to='/tuesday'>Tuesday</NavLink>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default Navbar;\n\n","import React from 'react';\nimport classes from './Names.module.css';\n\n\nclass Names extends React.Component {\n\n    render  ()  {\n\n        let drawName = this.props.names.map(name => <span>{name.name}</span>)\n\n        return (\n            <div className={classes.main}>\n                {drawName}\n            </div>\n\n\n        )\n    }\n}\n\nexport default Names;\n\n//домашка от меня №3: создать компоненту, у которой:\n// - есть спан с числом, инпут и кнопка\n// - при нажатии на кнопку число в спане увеличивается на 1\n// - при нажатии на кнопку вызывается алерт с приветствием имени, введённым в инпуте\n// - при нажатии на кнопку инпут должен очиститься\n// (!!! обязательно проверить работу самому !!!)","import React from 'react';\nimport classes from './Button.module.css';\n\n\nclass Button extends React.Component {\n\n    render (props) {\n        let disable = this.props.inputValue === '';\n        return (\n\n            <div>\n                <button className={classes.button}\n                        onClick= {this.props.plus}\n                        disabled={disable}>\n                    Milkyway\n                </button>\n            </div>\n\n        )\n    }\n}\nexport default Button\n\n//домашка от меня №3: создать компоненту, у которой:\n// - есть спан с числом, инпут и кнопка\n// - при нажатии на кнопку число в спане увеличивается на 1\n// - при нажатии на кнопку вызывается алерт с приветствием имени, введённым в инпуте\n// - при нажатии на кнопку инпут должен очиститься\n// (!!! обязательно проверить работу самому !!!)","import React from 'react';\nimport classes from \"./Span.module.css\";\n\n\nclass Span extends React.Component {\n    render  ()  {\n        return (\n            <div>\n            <span className={classes.span}>\n                {this.props.count}\n            </span>\n            </div>\n        )\n    }\n}\nexport default Span;\n\n//домашка от меня №3: создать компоненту, у которой:\n// - есть спан с числом, инпут и кнопка\n// - при нажатии на кнопку число в спане увеличивается на 1\n// - при нажатии на кнопку вызывается алерт с приветствием имени, введённым в инпуте\n// - при нажатии на кнопку инпут должен очиститься\n// (!!! обязательно проверить работу самому !!!)","import React from \"react\";\r\nimport \"./Input.css\";\r\n\r\nclass Input extends React.Component {\r\n    state = {\r\n        error: true\r\n    }\r\n\r\n    changeValue = (e) => {\r\n            this.setState({error: false})\r\n            this.props.changeInputValue(e.currentTarget.value)\r\n        if(e.currentTarget.value === \"\") {\r\n            this.setState({error: true})\r\n        }\r\n    }\r\n    onKeyPress = (e) => {\r\n        if(e.key === 'Enter') {\r\n            this.props.plus();\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let error = this.state.error ? \"error\" : \"input\";\r\n        return (\r\n            <div>\r\n                <input className={error}\r\n                       onKeyPress={this.onKeyPress}\r\n                       onChange={this.changeValue}\r\n                       value={this.props.inputValue}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Input;\r\n//- в своём проекте (домашка №4) вынести инпут в\r\n// отдельную компоненту (если вы этого не сделали) и \"прокачать\" его\r\n//   1. подсветка при попытке ввести пустое значение,\r\n//   2. отправка текста по нажатию \"Enter\",\r\n//   3. сделать его контролируемым (локальный стейт, как на уроке))\r\n// ...что бы не прокачивать в будущем каждый инпут, а использовать уже готовый\r\n// (или \"допрокачивать\" готовый) установите в свой проект react-router-dom и используя\r\n// <HashRouter> вместо <BrowserRouter> (так как он лучше работает на gh-pages)\r\n// сделайте 2 страницы: понедельник, вторник (подсмотрите в соцсети \"как\" или смело обращайтесь на\r\n// \"хэлп\" по любым вопросам), всё сделанное (домашка №4) отобразите на странице понедельника\r\n// - сделайте выезжающий сбоку/сверху/снизу (на выбор/или все сразу для практики)\r\n// навбар со списком страниц, обёрнутых в <NavLink> со ссылками на соответствующие\r\n// страницы, текущую страницу в списке подсвечивать","import React from 'react';\nimport classes from \"./Monday.module.css\";\nimport Names from \"./Monday/Names\";\nimport Button from \"./Monday/Button\";\nimport Span from \"./Monday/Span\";\nimport Input from \"./Monday/Input\";\n\n\nclass Monday extends React.Component {\n    render ()  {\n        return (\n            <div className={classes.main}>\n                <Names names={this.props.names} />\n                <Button plus={this.props.plus}\n                        inputValue={this.props.inputValue}/>\n                <Span count={this.props.count} />\n                <Input changeInputValue={this.props.changeInputValue}\n                       inputValue={this.props.inputValue}\n                       plus={this.props.plus}  />\n            </div>\n        )\n    }\n}\nexport default Monday;\n\n","import React from 'react';\nimport \"./Tuesday.css\"\n\nclass TodoHeader extends React.Component {\n    state = {\n        error: false,\n        inputValue: \"\"\n    }\n    onAddTaskClick = () => {\n        let newTitle = this.state.inputValue.trim();\n        if(newTitle === \"\") {\n            this.setState({error: true})\n        } else {\n            this.props.addTask(newTitle)\n            this.setState({error: false,\n            inputValue: \"\"})\n    }}\n    titleChange = (e) => {\n        this.setState({\n            error: false,\n            inputValue: e.currentTarget.value})\n    }\n    onKeyPress = (e) => {\n        if(e.key === 'Enter') {\n            this.onAddTaskClick();\n        }\n    }\n    render = () => {\n        let error = this.state.error ? \"err\" : \"default\";\n        return (\n            <div className=\"todoList\">\n                <div className=\"todoList-header\">\n                    <h3 className=\"todoList-header__title\">What to Learn</h3>\n                        <input className={error}\n                               onChange={this.titleChange}\n                               onKeyPress={this.onKeyPress}\n                               value={this.state.inputValue}\n                               type=\"text\"\n                               placeholder=\"New task name\"/>\n                        <button className='button-add' onClick={this.onAddTaskClick}>Add</button>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default TodoHeader;\n\n","import React from 'react';\nimport './Tuesday.css';\n\nclass TodoTask extends React.Component {\n    state = {\n        isEditMode: false,\n        taskPriority: false,\n        priority: 'Low'\n    }\n\n\n    activatedEditMode = () => {\n        this.setState({isEditMode: true})\n    };\n    deActivatedEditMode = () => {\n        this.setState({isEditMode: false})\n    }\n    onIsDoneChanged = (e) => {\n        this.props.changeStatus(this.props.task.id, e.currentTarget.checked)\n    };\n    onTitleChanged = (e) => {\n        this.props.changeTitle(this.props.task.id, e.currentTarget.value)\n    };\n    onDeleteTask = () => {\n        this.props.onDeleteTask(this.props.task.id)\n    }\n    taskPriority = () => {\n        this.setState({taskPriority: true})\n    }\n    changeTaskPriority = (newPriority) => {\n        this.setState({\n            priority: newPriority,\n            taskPriority: false\n        })\n    }\n\n\n    render = () => {\n        let classDone = this.props.task.isDone ? \"todoList-task done\" : \"todoList-task\";\n        return (\n            <div className={classDone}>\n                <span onClick={this.onDeleteTask} className='delete'/>\n                <input type=\"checkbox\"\n                       checked={this.props.task.isDone}\n                       onChange={this.onIsDoneChanged}/>\n\n                {this.state.isEditMode\n                    ? <input value={this.props.task.title}\n                             onChange={this.onTitleChanged}\n                             autoFocus={true}\n                             onBlur={this.deActivatedEditMode}/>\n                    : <span onClick={this.activatedEditMode}>\n                      {this.props.task.id}: {this.props.task.title}</span>\n                }\n                {this.state.taskPriority\n                    ? <div className='priority'>\n                        <span onClick={ ()=> this.changeTaskPriority('Low')}>Low</span>\n                        <span onClick={ ()=> this.changeTaskPriority('Middle')}>Middle</span>\n                        <span onClick={ ()=> this.changeTaskPriority('High')}>High</span>\n                    </div>\n                    : <span onClick={this.taskPriority}> - {this.state.priority}</span>\n                }\n\n            </div>\n\n        );\n    }\n}\n\nexport default TodoTask;\n\n","import React from 'react';\nimport TodoTask from \"./TodoTask\"\nimport PropTypes from 'prop-types';\nimport \"./Tuesday.css\"\n\n\nclass TodoTasks extends React.Component {\n    render = () => {\n        let tasksElement = this.props.tasks.map(task => {\n            return (\n                <TodoTask task={task}\n                          onDeleteTask={this.props.onDeleteTask}\n                          changeTitle={this.props.changeTitle}\n                          changeStatus={this.props.changeStatus} />\n            )\n        });\n\n        return (\n            <div className=\"todoList-tasks\">\n                {tasksElement}\n            </div>\n\n        );\n    }\n}\n\nexport default TodoTasks;\nTodoTasks.propTypes = {\n    tasks: PropTypes.array\n}\n\n","import React from 'react';\nimport './Tuesday.css';\nimport PropTypes from 'prop-types';\n\nclass TodoFooter extends React.Component {\n    state = {\n        isHidden: false\n    }\n    onAllFilterClick = () => {this.props.changeFilter('All')};\n    onCompletedFilterClick = () => {this.props.changeFilter('Completed')};\n    onActiveFilterClick = () => {this.props.changeFilter('Active')};\n    onShowFiltersClick = () => {this.setState({isHidden: false})};\n    onHideFiltersClick = () => {this.setState({isHidden: true})};\n\n    render = () => {\n        let classForAll = this.props.filterValue === \"All\" ? \"filter-active\" : \"button-default\";\n        let classForCompleted = this.props.filterValue === \"Completed\" ? \"filter-active\" : \"button-default\";\n        let classForActive = this.props.filterValue === \"Active\" ? \"filter-active\" : \"button-default\";\n\n        return (\n            <div className=\"todoList-footer\">\n                {!this.state.isHidden &&\n                <div>\n                    <button className={classForAll} onClick={this.onAllFilterClick}>All</button>\n                    <button className={classForCompleted} onClick={this.onCompletedFilterClick}>Completed</button>\n                    <button className={classForActive} onClick={this.onActiveFilterClick}>Active</button>\n                </div>\n                }\n                {!this.state.isHidden && <span onClick={this.onHideFiltersClick}>hide</span>}\n                {this.state.isHidden && <span onClick={this.onShowFiltersClick}>show</span>}\n            </div>\n\n        );\n    }\n}\n\nexport default TodoFooter;\nTodoFooter.propTypes = {\n    filterValue: PropTypes.string\n}\n\n","export const saveState =(key, state)=> {\r\n    let stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\nexport const restoreState = (key, defaultState) => {\r\n    let stateAsString = localStorage.getItem(key);\r\n    if (stateAsString != null) {\r\n        defaultState = JSON.parse(stateAsString);\r\n    } return defaultState;\r\n}\r\n","import React from 'react';\nimport TodoHeader from \"./TodoHeader\";\nimport TodoTasks from \"./TodoTasks\";\nimport TodoFooter from \"./TodoFooter\";\nimport \"./Tuesday.css\"\nimport {restoreState} from \"../../store\";\n\n\n\nclass Tuesday extends React.Component {\n    state = {\n        tasks: [],\n        filterValue: \"All\"\n    };\n    nextTaskId = 0;\n\n    saveState =()=> {\n        let stateAsString = JSON.stringify(this.state);\n        localStorage.setItem('state', stateAsString)\n    }\n    restoreState = () => {\n        let state = restoreState('state', this.state)\n        this.setState(state, ()=>{\n            this.state.tasks.forEach(t=>{\n                if(t.id >= this.nextTaskId) {\n                    this.nextTaskId = t.id + 1}})\n        });\n    }\n    componentDidMount() {\n        this.restoreState();\n    }\n    addTask = (newTitle) => {\n        let newTask = {\n            id: this.nextTaskId,\n            title: newTitle,\n            isDone: false,\n        };\n        this.nextTaskId++;\n        this.setState({tasks: [...this.state.tasks, newTask]}, this.saveState);\n\n    };\n    changeFilter = (newFilterValue) => {\n        this.setState({filterValue: newFilterValue})\n    };\n    changeStatus = (taskId, isDone) => {\n        this.changeTask(taskId, {isDone: isDone})\n    }\n    changeTitle = (taskId, title) => {\n        this.changeTask(taskId, {title: title})\n    }\n    changeTask = (taskId, newPropValue) => {\n        let newTasks = this.state.tasks.map ( t => {\n            if(t.id === taskId) {\n                return {...t, ...newPropValue}\n            }\n            return t;\n        })\n        this.setState({tasks: newTasks}, this.saveState)\n    }\n   onDeleteTask = (taskId) => {\n        const filteredArray = this.state.tasks.filter( (t)=> {\n            return taskId !== t.id\n        } )\n       this.setState({\n           tasks: filteredArray\n       });\n   }\n\n    render = () => {\n\n        let filtredTasks = this.state.tasks.filter(t => {\n            switch (this.state.filterValue) {\n                case 'Active':\n                    return t.isDone === false;\n                case 'Completed':\n                    return t.isDone === true;\n                case 'All':\n                    return true;\n            }\n        })\n\n        return (\n            <div className=\"App\">\n                <div className=\"todoList\">\n\n                    <TodoHeader addTask={this.addTask} />\n                    <TodoTasks tasks={filtredTasks}\n                               onDeleteTask={this.onDeleteTask}\n                               changeTitle={this.changeTitle}\n                               changeStatus={this.changeStatus}/>\n                    <TodoFooter filterValue={this.state.filterValue}\n                                changeFilter={this.changeFilter}/>\n                </div>\n            </div>\n\n        )\n    }\n}\nexport default Tuesday;\n\n","import React from 'react';\nimport classes from './App.module.css';\nimport Navbar from \"./hw3/Navbar\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport Monday from \"./hw3/Monday\";\nimport Tuesday from \"./hw3/Tuesday/Tuesday\";\n\n\nclass App extends React.Component {\n\n    state = {\n        def: {\n            count: 8,\n            title: 'Hello '\n        },\n        names: [\n            {name: ''},\n        ],\n        inputValue: \"\",\n        title: \"\",\n        loading: true\n\n    };\n    plus = () => {\n        this.setState(\n            {\n                def: {count: this.state.def.count + 1},\n                title: this.state.inputValue,\n                names: [...this.state.names, {name: this.state.inputValue}]\n            })\n        alert(\"Hello \" + this.state.inputValue);\n        this.state.inputValue = '';\n\n    };\n\n    changeInputValue = (newTitle) => {\n        this.setState({\n            inputValue: newTitle\n        });\n    }\n    componentDidMount() {\n        setTimeout(()=> {this.setState({loading: false})}, 5000)\n    }\n\n    render() {\n        return (\n            <HashRouter>\n                <div className={classes.main}>\n                    <Navbar/>\n                    <Route path='/monday' render={() =>\n                        <Monday names={this.state.names}\n                                inputValue={this.state.inputValue}\n                                plus={this.plus}\n                                changeInputValue={this.changeInputValue}\n                                count={this.state.def.count}/>}/>\n                    {this.state.loading\n                        ? <span className={classes.loading}></span>\n                    : <div className={classes.tuesday}>\n                            <Route path='/tuesday' render={() =>\n                                <Tuesday/>}/>\n                        </div>}\n\n                </div>\n            </HashRouter>\n        )\n    }\n}\n\nexport default App;\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}